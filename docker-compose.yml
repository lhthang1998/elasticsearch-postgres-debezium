version: "3"
services:
  zookeeper:
    image: debezium/zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  kafka:
    image: debezium/kafka
    container_name: kafka
    restart: always
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181

  postgres:
    image: debezium/postgres:15-alpine
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test_db
    volumes:
      - ./postgres:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=datasearch
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      #      - xpack.security.enabled=false
      - xpack.security.enabled=true # enable authentication
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=test
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - bootstrap.memory_lock=true
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
#      - ./elasticsearch/data:/var/lib/elasticsearch/data #on ubuntu
    ports:
      - "9200:9200"
    depends_on:
      - postgres
      - kafka
    restart: always

  connect:
    build: ./debezium-jdbc-es
    container_name: connect
    restart: always
    ports:
      - 8083:8083
      - 5005:5005
    links:
      - kafka
      - postgres
      - elasticsearch
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
